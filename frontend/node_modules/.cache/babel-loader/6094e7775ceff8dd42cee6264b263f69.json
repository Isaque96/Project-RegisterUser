{"ast":null,"code":"var _jsxFileName = \"D:\\\\Mega\\\\Projeto Cadastro de Usu\\xE1rio\\\\frontend\\\\src\\\\components\\\\user\\\\UserCrud.jsx\";\nimport React, { Component } from \"react\";\nimport axios from 'axios';\nimport Main from '../template/Main';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst headerProps = {\n  icon: 'users',\n  title: 'Usuários',\n  Subtitle: 'Cadastro de Usuários: Incluir, Listar, Alterar e Excluir'\n};\nconst baseUrl = 'http://localhost:3001/users';\nconst initialState = {\n  user: {\n    name: '',\n    email: ''\n  },\n  list: []\n};\nexport default class UserCrud extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = { ...initialState\n    };\n  }\n\n  componentWillMount() {\n    axios(baseUrl).then(resp => {\n      this.setState({\n        list: resp.data\n      });\n    });\n  }\n\n  clear() {\n    this.setState({\n      user: initialState.user\n    });\n  }\n\n  save() {\n    const user = this.state.user;\n    const method = user.id ? 'put' : 'post';\n    const url = user.id ? `${baseUrl}/${user.id}` : baseUrl;\n    axios[method](url, user).then(resp => {\n      const list = this.getUpdatedList(resp.data);\n      this.setState({\n        user: initialState.user,\n        list\n      });\n    });\n  }\n\n  getUpdatedList(user, add = true) {\n    const list = this.state.list.filter(u => u.id !== user.id);\n\n    if (add) {\n      list.unshift(user);\n    }\n\n    return list;\n  }\n\n  updateField(event) {\n    const user = { ...this.state.user\n    };\n    user[event.target.name] = event.target.value;\n    this.setState({\n      user\n    });\n  }\n\n  renderForm() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-md-6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Nome\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              name: \"name\",\n              value: this.state.user.name,\n              onChange: e => this.updateField(e),\n              placeholder: \"Digite o nome...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-md-6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"E-mail\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              name: \"email\",\n              value: this.state.user.email,\n              onChange: e => this.updateField(e),\n              placeholder: \"Digite o e-mail...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 d-flex justify-content-end\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: e => this.save(e),\n            children: \"Salvar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary ml-2\",\n            onClick: e => this.clear(e),\n            children: \"Cancelar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n\n  load(user) {\n    this.setState({\n      user\n    });\n  }\n\n  remove(user) {\n    axios.delete(`${baseUrl}/${user.id}`).then(resp => {\n      const list = this.getUpdatedList(user);\n      this.setState({\n        list\n      });\n    });\n  }\n\n  renderTable() {\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Nome\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"E-mail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"A\\xE7\\xF5es\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: this.renderRows()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this);\n  }\n\n  renderRows() {\n    return this.state.list.map(user => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: user.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: user.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-warning\",\n            onClick: () => this.load(user),\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-pencil\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger ml-2\",\n            onClick: () => this.remove(user),\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-trash\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, user.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Main, { ...headerProps,\n      children: [this.renderForm(), this.renderTable()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/Mega/Projeto Cadastro de Usuário/frontend/src/components/user/UserCrud.jsx"],"names":["React","Component","axios","Main","headerProps","icon","title","Subtitle","baseUrl","initialState","user","name","email","list","UserCrud","state","componentWillMount","then","resp","setState","data","clear","save","method","id","url","getUpdatedList","add","filter","u","unshift","updateField","event","target","value","renderForm","e","load","remove","delete","renderTable","renderRows","map","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from 'axios';\r\nimport Main from '../template/Main';\r\n\r\nconst headerProps = {\r\n  icon: 'users',\r\n  title: 'Usuários',\r\n  Subtitle: 'Cadastro de Usuários: Incluir, Listar, Alterar e Excluir'\r\n}\r\n\r\nconst baseUrl = 'http://localhost:3001/users';\r\nconst initialState = {\r\n  user: { name: '', email: '' },\r\n  list:[]\r\n}\r\n\r\nexport default class UserCrud extends Component {\r\n  state = { ...initialState };\r\n\r\n  componentWillMount() {\r\n    axios(baseUrl).then(resp => {\r\n      this.setState({ list: resp.data });\r\n    })\r\n  }\r\n\r\n  clear() {\r\n    this.setState({ user: initialState.user });\r\n  }\r\n\r\n  save() {\r\n    const user = this.state.user;\r\n    const method = user.id ? 'put' : 'post';\r\n    const url = user.id ? `${baseUrl}/${user.id}` : baseUrl;\r\n    axios[method](url, user).then(resp => {\r\n      const list = this.getUpdatedList(resp.data);\r\n      this.setState({ user: initialState.user, list });\r\n    })\r\n  }\r\n\r\n  getUpdatedList(user, add = true) {\r\n    const list = this.state.list.filter(u => u.id !== user.id);\r\n    if (add) {\r\n      list.unshift(user);\r\n    }\r\n    return list\r\n  }\r\n\r\n  updateField(event) {\r\n    const user = { ...this.state.user };\r\n    user[event.target.name] = event.target.value;\r\n    this.setState({ user });\r\n  }\r\n\r\n  renderForm() {\r\n    return (\r\n      <div className=\"form\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-md-6\">\r\n            <div className=\"form-group\">\r\n              <label>Nome</label>\r\n              <input type=\"text\" className=\"form-control\" name=\"name\" value={this.state.user.name} onChange={e => this.updateField(e)} placeholder=\"Digite o nome...\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12 col-md-6\">\r\n            <div className=\"form-group\">\r\n              <label>E-mail</label>\r\n              <input type=\"text\" className=\"form-control\" name=\"email\" value={this.state.user.email} onChange={e => this.updateField(e)} placeholder=\"Digite o e-mail...\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        <div className=\"row\">\r\n          <div className=\"col-12 d-flex justify-content-end\">\r\n            <button className=\"btn btn-primary\" onClick={e => this.save(e)}>\r\n              Salvar\r\n            </button>\r\n            <button className=\"btn btn-secondary ml-2\" onClick={e => this.clear(e)}>\r\n              Cancelar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  load(user) {\r\n    this.setState({ user });\r\n  }\r\n\r\n  remove(user) {\r\n    axios.delete(`${baseUrl}/${user.id}`).then(resp => {\r\n      const list = this.getUpdatedList(user, );\r\n      this.setState({ list });\r\n    })\r\n  }\r\n\r\n  renderTable() {\r\n    return (\r\n      <table className=\"table mt-4\">\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Nome</th>\r\n            <th>E-mail</th>\r\n            <th>Ações</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {this.renderRows()}\r\n        </tbody>\r\n      </table>\r\n    )\r\n  }\r\n\r\n  renderRows() {\r\n    return this.state.list.map(user => {\r\n      return (\r\n        <tr key={user.id}>\r\n          <td>{user.id}</td>\r\n          <td>{user.name}</td>\r\n          <td>{user.email}</td>\r\n          <td>\r\n            <button className=\"btn btn-warning\" onClick={() => this.load(user)}>\r\n              <i className=\"fa fa-pencil\"></i>\r\n            </button>\r\n            <button className=\"btn btn-danger ml-2\" onClick={() => this.remove(user)}>\r\n              <i className=\"fa fa-trash\"></i>\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      )\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Main {...headerProps}>\r\n        {this.renderForm()}\r\n        {this.renderTable()}\r\n      </Main>\r\n    )\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}