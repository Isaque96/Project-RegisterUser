{"ast":null,"code":"var _jsxFileName = \"D:\\\\Mega\\\\Projeto Cadastro de Usu\\xE1rio\\\\frontend\\\\src\\\\components\\\\user\\\\UserCrud.jsx\";\nimport React, { Component } from \"react\";\nimport axios from 'axios';\nimport Main from '../template/Main';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst headerProps = {\n  icon: 'users',\n  title: 'Usuários',\n  Subtitle: 'Cadastro de Usuários: Incluir, Listar, Alterar e Excluir'\n};\nconst baseUrl = 'http://localhost:3001/users';\nconst initialState = {\n  user: {\n    name: '',\n    email: ''\n  },\n  list: []\n};\nexport default class UserCrud extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = { ...initialState\n    };\n  }\n\n  clear() {\n    this.setState({\n      user: initialState.user\n    });\n  }\n\n  save() {\n    const user = this.state.user;\n    const method = user.id ? 'put' : 'post';\n    const url = user.id ? `${baseUrl}/${user.id}` : baseUrl;\n    axios[method](url, user).then(resp => {\n      const list = this.getUpdatedList(resp.data);\n      this.setState({\n        user: initialState.user,\n        list\n      });\n    });\n  }\n\n  getUpdatedList(user) {\n    const list = this.state.list.filter(u => u.id !== user.id);\n    list.unshift(user);\n    return listS;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Main, { ...headerProps,\n      children: \"Cadastro de Usu\\xE1rio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/Mega/Projeto Cadastro de Usuário/frontend/src/components/user/UserCrud.jsx"],"names":["React","Component","axios","Main","headerProps","icon","title","Subtitle","baseUrl","initialState","user","name","email","list","UserCrud","state","clear","setState","save","method","id","url","then","resp","getUpdatedList","data","filter","u","unshift","listS","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;;AAEA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,IAAI,EAAE,OADY;AAElBC,EAAAA,KAAK,EAAE,UAFW;AAGlBC,EAAAA,QAAQ,EAAE;AAHQ,CAApB;AAMA,MAAMC,OAAO,GAAG,6BAAhB;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,IAAI,EAAE,EAAR;AAAYC,IAAAA,KAAK,EAAE;AAAnB,GADa;AAEnBC,EAAAA,IAAI,EAAC;AAFc,CAArB;AAKA,eAAe,MAAMC,QAAN,SAAuBb,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC9Cc,KAD8C,GACtC,EAAE,GAAGN;AAAL,KADsC;AAAA;;AAG9CO,EAAAA,KAAK,GAAG;AACN,SAAKC,QAAL,CAAc;AAAEP,MAAAA,IAAI,EAAED,YAAY,CAACC;AAArB,KAAd;AACD;;AAEDQ,EAAAA,IAAI,GAAG;AACL,UAAMR,IAAI,GAAG,KAAKK,KAAL,CAAWL,IAAxB;AACA,UAAMS,MAAM,GAAGT,IAAI,CAACU,EAAL,GAAU,KAAV,GAAkB,MAAjC;AACA,UAAMC,GAAG,GAAGX,IAAI,CAACU,EAAL,GAAW,GAAEZ,OAAQ,IAAGE,IAAI,CAACU,EAAG,EAAhC,GAAoCZ,OAAhD;AACAN,IAAAA,KAAK,CAACiB,MAAD,CAAL,CAAcE,GAAd,EAAmBX,IAAnB,EAAyBY,IAAzB,CAA8BC,IAAI,IAAI;AACpC,YAAMV,IAAI,GAAG,KAAKW,cAAL,CAAoBD,IAAI,CAACE,IAAzB,CAAb;AACA,WAAKR,QAAL,CAAc;AAAEP,QAAAA,IAAI,EAAED,YAAY,CAACC,IAArB;AAA2BG,QAAAA;AAA3B,OAAd;AACD,KAHD;AAID;;AAEDW,EAAAA,cAAc,CAACd,IAAD,EAAO;AACnB,UAAMG,IAAI,GAAG,KAAKE,KAAL,CAAWF,IAAX,CAAgBa,MAAhB,CAAuBC,CAAC,IAAIA,CAAC,CAACP,EAAF,KAASV,IAAI,CAACU,EAA1C,CAAb;AACAP,IAAAA,IAAI,CAACe,OAAL,CAAalB,IAAb;AACA,WAAOmB,KAAP;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,IAAD,OAAU1B,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AA7B6C","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from 'axios';\r\nimport Main from '../template/Main';\r\n\r\nconst headerProps = {\r\n  icon: 'users',\r\n  title: 'Usuários',\r\n  Subtitle: 'Cadastro de Usuários: Incluir, Listar, Alterar e Excluir'\r\n}\r\n\r\nconst baseUrl = 'http://localhost:3001/users';\r\nconst initialState = {\r\n  user: { name: '', email: '' },\r\n  list:[]\r\n}\r\n\r\nexport default class UserCrud extends Component {\r\n  state = { ...initialState };\r\n\r\n  clear() {\r\n    this.setState({ user: initialState.user });\r\n  }\r\n\r\n  save() {\r\n    const user = this.state.user;\r\n    const method = user.id ? 'put' : 'post';\r\n    const url = user.id ? `${baseUrl}/${user.id}` : baseUrl;\r\n    axios[method](url, user).then(resp => {\r\n      const list = this.getUpdatedList(resp.data);\r\n      this.setState({ user: initialState.user, list });\r\n    })\r\n  }\r\n\r\n  getUpdatedList(user) {\r\n    const list = this.state.list.filter(u => u.id !== user.id);\r\n    list.unshift(user);\r\n    return listS\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Main {...headerProps}>\r\n        Cadastro de Usuário\r\n      </Main>\r\n    )\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}